#!/bin/sh
# Purpose here is to get all of the lines that are between '@l' tokens
# into their own tex file. This will then be '\input'ed into the file
# generated by lowdown

# count and file are the varaibles that we need to keep track of.
# this is what is responsible for handling the @l tokens, and latex
# code in between them

TEXCC=${TEXCC:-pdflatex}
file=$1
GENFILES="$(mktemp)"

for arg in "$@"
do
	case $arg in
		-l|--latex)
			shift
			;;
		-g|--groff)
			shift
			;;
		-w|--html)
			shift
			;;
		-p|--plain)
			shift
			;;
		-h|--help)
			shift
			;;
		*)
			shift
			;;
	esac
done

# Handle the LaTeX blocks
count=0
cp "${file}" "copy-${file}"
sed -n "/^@l$/=" "${file}" | awk '{if (NR % 2 == 0) {print $1} else {printf $1 "," }}' | while read -r LINE
do
	start=${LINE%%,*}
	end=${LINE##*,}
	cf="${count}-${file}.tex"
	sed -n "${start},${end}p" "${file}" > "$cf"
	sed -i "/@l/d" "$cf"
	sed "${start},${end}s/.*/@input@${cf}@/g" "copy-${file}" > "copy-${count}-${file}"
	mv "copy-${count}-${file}" "copy-${file}"
	echo "$cf" >> "$GENFILES"
	count=$((count + 1))
done

count=0
CODEBLOCK=N # Global variable to determine whether or not we have a code block in the file; if Y, then \usepackage[dvipsnames]{xcolor}
a='```'
ptrn="${a}@C@?[a-z]*@?[a-z]*"

CODESRCFILES="$(grep -E "${ptrn}" "${file}" | cut -d"@" -f4 | sort -u)"

[ -n "$CODESRCFILES" ] && {
	for srcf in $CODESRCFILES
	do
		rm -v "$srcf"
	done
}

sed -E -n "/^${ptrn}/=" "${file}" | awk '{if (NR % 2 == 0) { print $1 } else { printf $1 "," }}' | while read -r LINE
do
	start=${LINE%%,*}
	end=${LINE##*,}
	lang=$(sed -n "${start}p" "${file}" | cut -d'@' -f3)
	[ -n "$(sed -n "${start}p" "${file}" | cut -d'@' -f4)" ] && langfile="$(sed -n "${start}p" "${file}" | cut -d'@' -f4)" || langfile=""
	tl="${count}-code-${file}.tmp.${lang}"
	sed -n "${start},${end}p" "${file}" > "$tl"
	sed -E -i "/$ptrn/d" "$tl"
	[ -n "$langfile" ] && cat "$tl" >> "$langfile"
	source-highlight --src-lang "${lang}" --out-format latexcolor -o "${count}-code-${file}.tex" -i "$tl"
	rm "$tl"
	CODEBLOCK=Y
	sed "${start},${end}s/.*/@input@${count}-code-${file}.tex@/g" "copy-${file}" > "copy-${count}-${file}"
	mv "copy-${count}-${file}" "copy-${file}"
	echo "${count}-code-${file}.tex" >> "$GENFILES"
	count=$((count + 1))
done

count=0
sed -n "/@c.*@c.*/=" "${file}" | while read -r LINE
do
	cf="${count}-cite-${file}.tex"
	sed -n "${LINE}p" "${file}" > "$cf"
	sed -i -E -e "s=^[^@]*@c=@c=" -e "s/@c(.*)@c/\\\\autocite{\1}/g" "$cf"
	sed "${LINE}s/@c.*@c/@input@${cf}@/" "copy-${file}" > "copy-${count}-${file}"
	mv "copy-${count}-${file}" "copy-${file}"
	echo "$cf" >> "$GENFILES"
	count=$((count + 1))
done

# Handle the Preamble block; this is only ran *once*
if grep -E -q "^@p$" "${file}"
then
	PREAM=$(sed -n "/^@p$/=" "${file}" | awk '{if (NR % 2 == 0) {print $1} else {printf $1 "," }}')
	start=${PREAM%%,*}
	end=${PREAM##*,}
	sed -n "${start},${end}p" "${file}" > "preamble-${file}.tex"
	sed -i "/@p/d" "preamble-${file}.tex"
	sed -i "${start},${end}s/.*/@pre@preamble-${file}.tex@/g" "copy-${file}"
	echo "preamble-${file}.tex" >> "$GENFILES"
fi
# Now we are on to the @m tokens
#count=0; sed -n "/@m/=" ${file} | while read LINE
#do \
#	sed -n "${LINE}p" ${file} > ${count}-math-${file}.tex
#	sed -i -e "s=^[^@]*@m=@m=" -e "s/@m/$/g" ${count}-math-${file}.tex
#	sed "${LINE}s/@m.*@m/@input{${count}-math-${file}.tex}/" copy-${file} > copy-${count}-${file}
#	mv copy-${count}-${file} copy-${file}
#	count=$((count + 1))
#done
uniq "copy-${file}" > "detex-${file}"
rm "copy-${file}"

lowdown -s -Tlatex --parse-math "detex-${file}" -o "${file}.tex";
rm "detex-${file}"

if grep -q "@pre@" "${file}.tex"
then
	PREAMINC=$(grep "@pre@" "${file}.tex" | sed -E "s=@pre@(.*)@=input{\1}=")
	sed -i -E  "s=^(\\\\documentclass\[[a-zA-Z0-9,]*\]\{[a-zA-Z]*})$=\1\n\n\\\\$PREAMINC=" "${file}.tex"
	sed -i -E "s=^@pre@.*$==" "${file}.tex"
fi
sed -i -E "s=@input@([^@]*)@=\\\\input{\1}=" "${file}.tex"


${TEXCC} "${file}.tex"

for f in $(cat "$GENFILES")
do
	rm -v "$f"
done
rm "$GENFILES"
